use std::fs::File;
use std::io::{BufRead, BufReader};

fn main() {
    println!("Hello, world!");
    let file = File::open("../data.txt").expect("Failed to read file");


    let mut start: Option<(usize,usize)> = None;
    let mut end: Option<(usize,usize)> = None;

    let data: Vec<Vec<u8>> = BufReader::new(file)
        .lines()
        .map(|l| l.expect("Error while reading flie"))
        .enumerate()
        .map(|(y_idx,l)| {
            l.chars()
                .enumerate()
                .map(|(x_idx, c)| {
                    match c {
                        'S' => {
                            start = Some((x_idx,y_idx));
                            1
                        },
                        'E' => {
                            end = Some((x_idx, y_idx);
                            26
                        },
                        _ => c as u8
                    }
                })
                .collect()
        })
        .collect();

    println!(
        "{:?}, {:?}",
        data.iter().flatten().max(),
        data.iter().flatten().min()
    );
}
